/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SwingInterface;

import Model.ModeloTabelaContatos;
import Model.Cliente;
import Control.ClienteDAO;
import Control.PedidoDAO;
import Model.*;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author victor
 */
public class TelaCliente extends javax.swing.JFrame {

    /**
     * Creates new form TelaCliente
     */
    private ModeloTabelaContatos modeloTabela;
    private ModeloTabelaPedidos modeloTabelaP;
     private int linhaClicada=-1;
     
    public TelaCliente() {
         modeloTabela = new ModeloTabelaContatos();
         modeloTabelaP = new ModeloTabelaPedidos();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        abaCliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        campoSobrenome = new javax.swing.JTextField();
        campoCPF = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        painelTabela = new javax.swing.JScrollPane();
        tabelaDados = new javax.swing.JTable();
        abaPedido = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        labelAltura = new javax.swing.JLabel();
        labelLargura = new javax.swing.JLabel();
        labelArea = new javax.swing.JLabel();
        btnIncluirPedido = new javax.swing.JButton();
        btnAlterarPedido = new javax.swing.JButton();
        btnExcluirPedido = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        campoCpfPedido = new javax.swing.JTextField();
        campoNomePedido = new javax.swing.JTextField();
        campoSobrenomePedido = new javax.swing.JTextField();
        campoAltura = new javax.swing.JTextField();
        campoLargura = new javax.swing.JTextField();
        campoTamanho = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        boxMaterial = new javax.swing.JComboBox<>();
        boxForma = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPedidos = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        listarItens = new javax.swing.JButton();
        btnEscolherAltura = new javax.swing.JButton();
        btnEscolherTamanho = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome:");

        jLabel2.setText("Sobrenome:");

        jLabel3.setText("CPF:");

        campoNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNomeActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        painelTabela.setFocusable(false);

        tabelaDados.setModel(modeloTabela);
        tabelaDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaDadosMouseClicked(evt);
            }
        });
        painelTabela.setViewportView(tabelaDados);

        javax.swing.GroupLayout abaClienteLayout = new javax.swing.GroupLayout(abaCliente);
        abaCliente.setLayout(abaClienteLayout);
        abaClienteLayout.setHorizontalGroup(
            abaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaClienteLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(abaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(abaClienteLayout.createSequentialGroup()
                        .addGroup(abaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(abaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoNome, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(campoSobrenome)
                            .addComponent(campoCPF)))
                    .addGroup(abaClienteLayout.createSequentialGroup()
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(painelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(276, Short.MAX_VALUE))
        );
        abaClienteLayout.setVerticalGroup(
            abaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaClienteLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(abaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(abaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(14, 14, 14)
                .addGroup(abaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campoCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(abaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnAtualizar)
                    .addComponent(btnListar)
                    .addComponent(btnExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(painelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        jTabbedPane1.addTab("Cliente", abaCliente);

        jLabel4.setText("CPF do Cliente:");

        jLabel5.setText("Nome:");

        jLabel6.setText("Sobrenome:");

        jLabel7.setText("Forma do Tapete:");

        jLabel8.setText("Material do Tapete:");

        labelAltura.setText("Altura (m):");

        labelLargura.setText("Largura (m):");

        labelArea.setText("Tamanho (m2):");

        btnIncluirPedido.setText("Incluir Item no Pedido");
        btnIncluirPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirPedidoActionPerformed(evt);
            }
        });

        btnAlterarPedido.setText("Alterar Item no Pedido");
        btnAlterarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarPedidoActionPerformed(evt);
            }
        });

        btnExcluirPedido.setText("Excluir Item no Pedido");
        btnExcluirPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPedidoActionPerformed(evt);
            }
        });

        campoCpfPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCpfPedidoActionPerformed(evt);
            }
        });

        campoNomePedido.setEditable(false);

        campoSobrenomePedido.setEditable(false);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        boxMaterial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Comum", "Refinado", "Deluxe" }));

        boxForma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Retangulo", "Triangulo", "Circulo" }));
        boxForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxFormaActionPerformed(evt);
            }
        });

        tabelaPedidos.setModel(modeloTabelaP);
        tabelaPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaPedidos);

        jLabel12.setText("Total do Pedido:");

        listarItens.setText("Listar Itens");
        listarItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarItensActionPerformed(evt);
            }
        });

        btnEscolherAltura.setText("Escolher por Medidas");
        btnEscolherAltura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscolherAlturaActionPerformed(evt);
            }
        });

        btnEscolherTamanho.setText("Escolher por Área");
        btnEscolherTamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscolherTamanhoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout abaPedidoLayout = new javax.swing.GroupLayout(abaPedido);
        abaPedido.setLayout(abaPedidoLayout);
        abaPedidoLayout.setHorizontalGroup(
            abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(abaPedidoLayout.createSequentialGroup()
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(abaPedidoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(24, 24, 24)
                        .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoCpfPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(campoNomePedido)
                            .addComponent(campoSobrenomePedido))
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)
                        .addGap(36, 353, Short.MAX_VALUE)
                        .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(campoLargura, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(campoAltura, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(boxMaterial, 0, 245, Short.MAX_VALUE))
                            .addComponent(campoTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(abaPedidoLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEscolherAltura)
                        .addGap(18, 18, 18)
                        .addComponent(btnEscolherTamanho)))
                .addGap(35, 35, 35))
            .addGroup(abaPedidoLayout.createSequentialGroup()
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(abaPedidoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(listarItens, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, abaPedidoLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(abaPedidoLayout.createSequentialGroup()
                                .addComponent(btnIncluirPedido)
                                .addGap(18, 18, 18)
                                .addComponent(btnAlterarPedido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExcluirPedido))
                            .addGroup(abaPedidoLayout.createSequentialGroup()
                                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelAltura)
                                    .addComponent(jLabel8)
                                    .addComponent(labelLargura)
                                    .addGroup(abaPedidoLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(89, 89, 89)
                                        .addComponent(boxForma, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(labelArea))
                                .addGap(25, 25, 25)))))
                .addContainerGap())
        );
        abaPedidoLayout.setVerticalGroup(
            abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaPedidoLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(campoCpfPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(btnBuscar)
                    .addComponent(boxForma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(campoNomePedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(boxMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(campoSobrenomePedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEscolherAltura)
                    .addComponent(btnEscolherTamanho))
                .addGap(22, 22, 22)
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAltura, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(campoAltura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLargura)
                    .addComponent(campoLargura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelArea))
                .addGap(61, 61, 61)
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluirPedido)
                    .addComponent(btnAlterarPedido)
                    .addComponent(btnExcluirPedido))
                .addGroup(abaPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(abaPedidoLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(listarItens)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, abaPedidoLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Pedido", abaPedido);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1084, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNomeActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        String tempNome = campoNome.getText();
        String tempSobrenome = campoSobrenome.getText();
        int tempCPF = Integer.parseInt(campoCPF.getText());
        Cliente contato = new Cliente(tempNome,tempSobrenome,tempCPF);
        contato.setNome(tempNome);
        contato.setSobreNome(tempSobrenome);
        contato.setCpf(tempCPF);
        ClienteDAO dao = null;
        try {
            dao = new ClienteDAO();
            dao.insereCliente(contato);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Erro ao atualizar no banco de dados. E="+ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        modeloTabela.adicionaContato(contato);
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
        if(linhaClicada!=-1){
            Cliente contato = modeloTabela.getContato(linhaClicada);
            contato.setNome(campoNome.getText());
            contato.setSobreNome(campoSobrenome.getText());
            contato.setCpf(Integer.parseInt(campoCPF.getText()));
            ClienteDAO dao = null;
            try {
                dao = new ClienteDAO();
                dao.atualizaCliente(contato);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"Erro ao atualizar no banco de dados. E="+ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
            //Atualiza tabela
            modeloTabela.fireTableRowsUpdated(linhaClicada, linhaClicada);
            
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // TODO add your handling code here:
        try {
            ClienteDAO dao = new ClienteDAO();
            List<Cliente> lista = dao.listaClientes();
            modeloTabela.setListaContatos(lista);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Erro ao conectar com o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        try {
            ClienteDAO dao = new ClienteDAO();
            int[] linhasSelecionadas = tabelaDados.getSelectedRows();
            List<Cliente> listaExcluir = new ArrayList();
            for (int i = 0; i < linhasSelecionadas.length; i++) {
                Cliente contato = modeloTabela.getContato(linhasSelecionadas[i]);
                dao.excluiCliente(contato);
                listaExcluir.add(contato);

            }
            for(Cliente contato:listaExcluir){
                modeloTabela.removeContato(contato);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Erro ao realizar exclusÃ£o de contatos.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tabelaDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaDadosMouseClicked
        // TODO add your handling code here:
        //Pega a linha clicada
        linhaClicada = tabelaDados.rowAtPoint(evt.getPoint());
        //Pega o contato da linha clidada
        Cliente cliente = modeloTabela.getContato(linhaClicada);
        //Seta os dados nos componentes
        campoNome.setText(cliente.getNome());
        campoSobrenome.setText(cliente.getSobreNome());
        campoCPF.setText(Integer.toString(cliente.getCpf()));
        
    }//GEN-LAST:event_tabelaDadosMouseClicked

    private void listarItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarItensActionPerformed
        // TODO add your handling code here:
        try {
            PedidoDAO dao = new PedidoDAO();
            List<Pedido> lista = dao.getPedidoDoCliente(campoCpfPedido.getText());
            System.out.println(lista);
            modeloTabelaP.setListaPedidos(lista);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Erro ao conectar com o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_listarItensActionPerformed

    private void tabelaPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPedidosMouseClicked
        // TODO add your handling code here:
        linhaClicada = tabelaPedidos.rowAtPoint(evt.getPoint());
        //Pega o contato da linha clidada
        Pedido pedido = modeloTabelaP.getPedido(linhaClicada);
        //Seta os dados nos componentes
        boxForma.setSelectedItem(pedido.getForma());
        boxMaterial.setSelectedItem(pedido.getMaterial());
        labelArea.setVisible(true);
        campoTamanho.setVisible(true);
        campoAltura.setVisible(false);
        labelAltura.setVisible(false);
        labelLargura.setVisible(false);
        campoLargura.setVisible(false);
        campoTamanho.setText(Double.toString(pedido.getTamanho()));
    }//GEN-LAST:event_tabelaPedidosMouseClicked

    private void boxFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxFormaActionPerformed
        // TODO add your handling code here:
        String tipoForma = (boxForma.getSelectedItem()).toString();
        campoAltura.setText("");
        campoLargura.setText("");
        campoTamanho.setText("");
        if(tipoForma.equals("Retangulo")){
            campoAltura.setVisible(true);
            labelAltura.setVisible(true);
            campoLargura.setVisible(true);
            labelLargura.setVisible(true);
            labelAltura.setText("Altura:");
            labelLargura.setText("Largura:");
            
        }
        else if(tipoForma.equals("Triangulo")){
            campoAltura.setVisible(true);
            labelAltura.setVisible(true);
            campoLargura.setVisible(true);
            labelLargura.setVisible(true);
            labelAltura.setText("Altura:");
            labelLargura.setText("Base:");
        }else if(tipoForma.equals("Circulo")){
            campoLargura.setVisible(false);
            labelLargura.setVisible(false);
            campoTamanho.setVisible(true);
            labelArea.setVisible(true);
            labelAltura.setText("Raio:");
        }
    }//GEN-LAST:event_boxFormaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        try {
            ClienteDAO dao = new ClienteDAO();
            Cliente cliente = dao.getCliente(Integer.parseInt(campoCpfPedido.getText()));
            campoNomePedido.setText(cliente.getNome());
            campoSobrenomePedido.setText(cliente.getSobreNome());

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Erro ao conectar com o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        try {
            PedidoDAO dao = new PedidoDAO();
            List<Pedido> lista = dao.getPedidoDoCliente(campoCpfPedido.getText());
            System.out.println(lista);
            modeloTabelaP.setListaPedidos(lista);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Erro ao conectar com o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void campoCpfPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCpfPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCpfPedidoActionPerformed
    
    private Double calcularCusto(){
        double custo = 0.0;
        double largura = 0.0;
        double altura = 0.0;
        double areaM2 = 0.0;
        double areaForma = 0.0;
        String tipoForma = (boxForma.getSelectedItem()).toString();
        String tipoMaterial = (boxMaterial.getSelectedItem()).toString();
        if((campoAltura.getText().isEmpty()) && (campoLargura.getText().isEmpty())){
            areaM2 = Double.parseDouble(campoTamanho.getText());
            if(tipoForma.equals("Retangulo")){
            if(tipoMaterial.equals("Comum")){
                custo = areaM2 * 15.50;
                return custo;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = areaM2 * 25.50;
                return custo;
            }
            else{
                custo = areaM2 * 35.50;
                return custo;
            }
        }else if(tipoForma.equals("Triangulo")){
            if(tipoMaterial.equals("Comum")){
                custo = areaM2 * 15.50;
                return custo;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = areaM2 * 25.50;
                return custo;
            }
            else{
                custo = areaM2 * 35.50;
                return custo;
            }
        }else{
            Circulo novoCirculo = new Circulo(altura);
            if(tipoMaterial.equals("Comum")){
                custo = areaM2 * 15.50;
                return custo;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = areaM2 * 25.50;
                return custo;
            }
            else{
                custo = areaM2 * 35.50;
                return custo;
            }
        }
        }else{
            altura =  Double.parseDouble(campoAltura.getText());
        if(!tipoForma.equals("Circulo")){
            largura =  Double.parseDouble(campoLargura.getText());
        }
        if(tipoForma.equals("Retangulo")){
            Retangulo novoRetangulo = new Retangulo(largura,altura);
            if(tipoMaterial.equals("Comum")){
                custo = novoRetangulo.area() * 15.50;
                return custo;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = novoRetangulo.area() * 25.50;
                return custo;
            }
            else{
                custo = novoRetangulo.area() * 35.50;
                return custo;
            }
        }else if(tipoForma.equals("Triangulo")){
            Triangulo novoTriangulo = new Triangulo(largura,altura);
            if(tipoMaterial.equals("Comum")){
                custo = novoTriangulo.area() * 15.50;
                return custo;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = novoTriangulo.area() * 25.50;
                return custo;
            }
            else{
                custo = novoTriangulo.area() * 35.50;
                return custo;
            }
        }else{
            Circulo novoCirculo = new Circulo(altura);
            if(tipoMaterial.equals("Comum")){
                custo = novoCirculo.area() * 15.50;
                return custo;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = novoCirculo.area() * 25.50;
                return custo;
            }
            else{
                custo = novoCirculo.area() * 35.50;
                return custo;
            }
        }
        }
    }
    private double calculaArea(){
        double custo = 0.0;
        double largura = 0.0;
        double altura = 0.0;
        double areaM2 = 0.0;
        double areaForma = 0.0;
        String tipoForma = (boxForma.getSelectedItem()).toString();
        String tipoMaterial = (boxMaterial.getSelectedItem()).toString();
        if((campoAltura.getText().isEmpty()) && (campoLargura.getText().isEmpty())){
            areaM2 = Double.parseDouble(campoTamanho.getText());
            return areaM2;
        }else{
            altura =  Double.parseDouble(campoAltura.getText());
        if(!tipoForma.equals("Circulo")){
            largura =  Double.parseDouble(campoLargura.getText());
        }
        if(tipoForma.equals("Retangulo")){
            Retangulo novoRetangulo = new Retangulo(largura,altura);
            return novoRetangulo.area();

        }else if(tipoForma.equals("Triangulo")){
            Triangulo novoTriangulo = new Triangulo(largura,altura);
            return novoTriangulo.area();
        }else{
            Circulo novoCirculo = new Circulo(altura);
            return  novoCirculo.area();
        }
        }
    }
    
    private void btnAlterarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarPedidoActionPerformed
        // TODO add your handling code here:
        if(linhaClicada!=-1){
            Pedido pedido = modeloTabelaP.getPedido(linhaClicada);
            
            pedido.setForma(boxForma.getSelectedItem().toString());
            pedido.setMaterial(boxMaterial.getSelectedItem().toString());
            pedido.setTamanho(calculaArea());
            pedido.setCusto(calcularCusto());
            PedidoDAO dao = null;
            try {
                dao = new PedidoDAO();
                dao.atualizaPedido(pedido);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"Erro ao atualizar no banco de dados. E="+ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
            //Atualiza tabela
            modeloTabela.fireTableRowsUpdated(linhaClicada, linhaClicada);
        }
    }//GEN-LAST:event_btnAlterarPedidoActionPerformed

    private void btnIncluirPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirPedidoActionPerformed
        // TODO add your handling code here:
        PedidoDAO dao = new PedidoDAO();
        double custo = 0.0;
        double largura = 0.0;
        double altura = 0.0;
        double areaM2 = 0.0;
        double areaForma = 0.0;
        String tipoForma = (boxForma.getSelectedItem()).toString();
        String tipoMaterial = (boxMaterial.getSelectedItem()).toString();
        if((campoAltura.getText().isEmpty()) && (campoLargura.getText().isEmpty())){
            System.out.println("AH PÓRRA");
            areaM2 = Double.parseDouble(campoTamanho.getText());
            if(tipoForma.equals("Retangulo")){
            if(tipoMaterial.equals("Comum")){
                custo = areaM2 * 15.50;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = areaM2 * 25.50;
            }
            else{
                custo = areaM2 * 35.50;
            }
            areaForma = areaM2;
        }else if(tipoForma.equals("Triangulo")){
            if(tipoMaterial.equals("Comum")){
                custo = areaM2 * 15.50;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = areaM2 * 25.50;
            }
            else{
                custo = areaM2 * 35.50;
            }
            areaForma = areaM2;
        }else{
            Circulo novoCirculo = new Circulo(altura);
            if(tipoMaterial.equals("Comum")){
                custo = areaM2 * 15.50;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = areaM2 * 25.50;
            }
            else{
                custo = areaM2 * 35.50;
            }
            areaForma = areaM2;
        }
        }else{
            altura =  Double.parseDouble(campoAltura.getText());
        if(!tipoForma.equals("Circulo")){
            largura =  Double.parseDouble(campoLargura.getText());
        }
        if(tipoForma.equals("Retangulo")){
            Retangulo novoRetangulo = new Retangulo(largura,altura);
            if(tipoMaterial.equals("Comum")){
                custo = novoRetangulo.area() * 15.50;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = novoRetangulo.area() * 25.50;
            }
            else{
                custo = novoRetangulo.area() * 35.50;
            }
            areaForma = novoRetangulo.area();
        }else if(tipoForma.equals("Triangulo")){
            Triangulo novoTriangulo = new Triangulo(largura,altura);
            if(tipoMaterial.equals("Comum")){
                custo = novoTriangulo.area() * 15.50;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = novoTriangulo.area() * 25.50;
            }
            else{
                custo = novoTriangulo.area() * 35.50;
            }
            areaForma = novoTriangulo.area();
        }else{
            Circulo novoCirculo = new Circulo(altura);
            if(tipoMaterial.equals("Comum")){
                custo = novoCirculo.area() * 15.50;
            }
            else if(tipoMaterial.equals("Refinado")){
                custo = novoCirculo.area() * 25.50;
            }
            else{
                custo = novoCirculo.area() * 35.50;
            }
            areaForma = novoCirculo.area();
        }
        }
         dao.adicionaPedidoAoCliente(campoCpfPedido.getText(), tipoForma, tipoMaterial,areaForma,custo);
    }//GEN-LAST:event_btnIncluirPedidoActionPerformed

    private void btnEscolherAlturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscolherAlturaActionPerformed
        // TODO add your handling code here:
        String tipoForma = (boxForma.getSelectedItem()).toString();
        labelAltura.setVisible(true);
        labelLargura.setVisible(true);
        campoAltura.setVisible(true);
        campoLargura.setVisible(true);
        campoTamanho.setVisible(false);
        labelArea.setVisible(false);
        if(tipoForma.equals("Circulo")){
            labelLargura.setVisible(false);
            campoLargura.setVisible(false);
        }
        
    }//GEN-LAST:event_btnEscolherAlturaActionPerformed

    private void btnEscolherTamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscolherTamanhoActionPerformed
        // TODO add your handling code here:
        labelArea.setVisible(true);
        campoTamanho.setVisible(true);
        campoAltura.setVisible(false);
        labelAltura.setVisible(false);
        labelLargura.setVisible(false);
        campoLargura.setVisible(false);
    }//GEN-LAST:event_btnEscolherTamanhoActionPerformed

    private void btnExcluirPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPedidoActionPerformed
        // TODO add your handling code here:
        try {
            PedidoDAO dao = new PedidoDAO();
            int[] linhasSelecionadas = tabelaPedidos.getSelectedRows();
            List<Pedido> listaExcluir = new ArrayList();
            for (int i = 0; i < linhasSelecionadas.length; i++) {
                Pedido pedido = modeloTabelaP.getPedido(linhasSelecionadas[i]);
                dao.excluiPedido(pedido);
                listaExcluir.add(pedido);

            }
            for(Pedido pedido:listaExcluir){
                modeloTabelaP.removePedido(pedido);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Erro ao realizar exclusão do pedido.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirPedidoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel abaCliente;
    private javax.swing.JPanel abaPedido;
    private javax.swing.JComboBox<String> boxForma;
    private javax.swing.JComboBox<String> boxMaterial;
    private javax.swing.JButton btnAlterarPedido;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnEscolherAltura;
    private javax.swing.JButton btnEscolherTamanho;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnExcluirPedido;
    private javax.swing.JButton btnIncluirPedido;
    private javax.swing.JButton btnListar;
    private javax.swing.JTextField campoAltura;
    private javax.swing.JTextField campoCPF;
    private javax.swing.JTextField campoCpfPedido;
    private javax.swing.JTextField campoLargura;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoNomePedido;
    private javax.swing.JTextField campoSobrenome;
    private javax.swing.JTextField campoSobrenomePedido;
    private javax.swing.JTextField campoTamanho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelAltura;
    private javax.swing.JLabel labelArea;
    private javax.swing.JLabel labelLargura;
    private javax.swing.JButton listarItens;
    private javax.swing.JScrollPane painelTabela;
    private javax.swing.JTable tabelaDados;
    private javax.swing.JTable tabelaPedidos;
    // End of variables declaration//GEN-END:variables
}
